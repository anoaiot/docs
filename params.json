{"name":"IGN IoT Documentation","tagline":"","body":"# [IGN Arm](http://repo.informatika.lipi.go.id/arm/image/)\r\n\r\n## Apa itu IGN ARM ?\r\nlihat [IGNwiki](http://igos-nusantara.or.id/wiki/index.php?title=Halaman_Utama#IGOS_Nusantara_ARM)\r\n\r\n> **IGN ARM** adalah distro **IGOS Nusantara** yang dikembangkan khusus untuk komputer dengan arsitektur ARM.\r\n\r\n## Instalasi\r\n1. unduh [image] (http://repo.informatika.lipi.go.id/arm/image/)\r\n2. kemudian extract file yang telah di unduh dengan cara ketik di terminal\r\n~~~bash\r\n$ sudo tar xvfJ filename.tar.xz\r\n~~~\r\n3. siapkan micro sdcard dengan kapasitas minimal **8 GB**\r\n4. masukan micro sdcard kedalam extention sdcard dan pasang di pc / laptop\r\n5. deteksi device melalui terminal dengan perintah **dmesg** misalkan\r\n**/dev/mmclbk0**\r\n6. apabila sudah dipastikan device berada ketik diterminal\r\n~~~bash\r\n$ sudo dd bs=4MB if=folder/image/ignarm/berada of=/dev/microsd/berada\r\n~~~\r\n7. Proses selesai masukan sdcard yang sudah terinstalasi ign arm kedalam komputer berbasis ARM\r\n8. **Boot**\r\n\r\n# [IGNSDK IoT Runtime](https://github.com/anak10thn/ignsdk-iot)\r\nIGNSDK IoT runtime merupakan perkakas yang memudahkan client apps library IGNSDK IoT ([Shark.io](npmjs.com/package/shark.io)) mengakses interface perangkat keras, sensor, sql, filesystem, dan etc, menggunakan javascript API.\r\n\r\n## Arsitektur\r\n![IGNSDK Arsitektur](https://raw.githubusercontent.com/ignsdk/doc.iot/master/img/ign-arch.png)\r\n\r\n## Cara mengakses petunjuk penggunaan\r\n\r\npada terminal, ketik\r\n~~~bash\r\n# ignsdk -h\r\n~~~\r\n\r\nperintah memunculkan informasi sebagai berikut :\r\n~~~bash\r\nUsage: ignsdk-iot [options]\r\nIGOS Nusantara Software Development Kit For IoT\r\n\r\nOptions:\r\n  -v, --version                               Show version\r\n  -p, --port <port>                           Setup websocket port\r\n  -t, --target <all, public, set ip address>  Set IP target\r\n  -n, --nodejs <nodejs script>                Execute nodejs script\r\n  -h, --help                                  Displays this help.\r\n~~~\r\n\r\n## Menjalankan runtime di jaringan lokal maupun public\r\n\r\npada terminal ketik\r\n\r\n~~~bash\r\n$ su\r\n# ignsdk-iot -t all &\r\n~~~\r\n\r\nperintah tersebut untuk menjalankan runtime ignsdk-iot dengan mengarahkan ke IP yang tersedia pada device.\r\n\r\n **-t** itu menunjukan alamat **IP** yang akan menjalankan ignsdk-iot\r\n\r\njika berhasil outputnya akan menjadi :\r\n\r\n~~~bash\r\n# [1] 458\r\nServer ON :  \"0.0.0.0\" Port : 6969\r\n~~~\r\n\r\n## Menjalankan NodeJS Script dengan runtime **ignsdk-iot**\r\n\r\n~~~bash\r\n$ su\r\n# ignsdk-iot -n (aplikasi berbasis node js yang ingin dijalankan)\r\n~~~\r\n\r\n# [Shark.io](npmjs.com/package/shark.io)\r\nJavaScript Client Library untuk mengakses API IGNSDK IoT. Saat ini shark.io baru dapat digunakan pada :\r\n* NodeJS/JX Core\r\n* HTML5\r\n\r\n## Instalasi\r\n```\r\n$ npm install shark.io\r\n```\r\n\r\n## PIN Map\r\n### Raspberry Pi 2\r\n![](https://cloud.githubusercontent.com/assets/828293/7487407/2c1bc186-f3e1-11e4-91ad-575fc569055b.png)\r\nsource : http://www.element14.com/community/docs/DOC-73950/l/raspberry-pi-2-model-b-gpio-40-pin-block-pinout\r\n\r\n## HTML5 Examples\r\n\r\nSource : `tank-web-control.html`\r\n\r\n![tank](https://github.com/ignsdk/doc.iot/raw/master/img/use/tank.gif)\r\n\r\n~~~html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n        <script type=\"text/javascript\" src=\"../lib.js\"></script>\r\n        <script type=\"text/javascript\">\r\n            window.onload = function() {\r\n                var socket;\r\n\r\n                socket = new WebSocket(\"ws://192.168.1.164:6969\");\r\n\r\n                socket.onclose = function()\r\n                {\r\n                    console.error(\"web channel closed\");\r\n                };\r\n                socket.onerror = function(error)\r\n                {\r\n                    console.error(\"web channel error: \" + error);\r\n                };\r\n                socket.onopen = function()\r\n                {\r\n                    new sharkIO(socket, function(channel) {\r\n                        window.fs = channel.objects.fs;\r\n                        window.gpio = channel.objects.gpio;\r\n                        gpio.set(18);\r\n    \t\t\tgpio.mode(\"out\");\r\n    \t\t\tgpio.set(23);\r\n    \t\t\tgpio.mode(\"out\");\r\n    \t\t\tgpio.set(24);\r\n    \t\t\tgpio.mode(\"out\");\r\n    \t\t\tgpio.set(25);\r\n    \t\t\tgpio.mode(\"out\");\r\n                    });\r\n                }\r\n            }\r\n\r\n            function maju(){\r\n                reset()\r\n                gpio.write(18,1);\r\n                gpio.write(24,1);\r\n            }\r\n            function mundur(){\r\n                reset()\r\n                gpio.write(23,1);\r\n                gpio.write(25,1);\r\n            }\r\n            function kanan_atas(){\r\n                reset()\r\n                gpio.write(18,1);\r\n            }\r\n            function kiri_atas(){\r\n                reset()\r\n                gpio.write(24,1);\r\n            }\r\n            function kanan_bawah(){\r\n                reset()\r\n                gpio.write(23,1);\r\n            }\r\n            function kiri_bawah(){\r\n                reset()\r\n                gpio.write(25,1);\r\n            }\r\n\t    function reset(){\r\n\t\t  gpio.write(18,0);\r\n\t\t  gpio.write(23,0);\r\n\t\t  gpio.write(24,0);\r\n\t\t  gpio.write(25,0);\r\n\t    }\r\n        </script>\r\n    </head>\r\n\t<style>\r\n\t@media (min-width: 30em) {\r\n    \t\t.row { width: 100%; display: table; table-layout: fixed; }\r\n    \t\t.col { display: table-cell; }\r\n\t}\r\n    button{\r\n        display: block; width: 100%; padding: 16% 0;\r\n    }\r\n\t</style>\r\n    <body>\r\n\t<div class=\"row\">\r\n        <div class=\"col\"></div>\r\n        <div class=\"col\"><button onclick=\"maju()\"><h1>MAJU</h1></button></div>\r\n        <div class=\"col\"></div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col\"><button onclick=\"kiri_atas()\"><h1>KIRI</h1></button></div>\r\n        <div class=\"col\"><button onclick=\"reset()\"><h1>STOP</h1></button></div>\r\n        <div class=\"col\"><button onclick=\"kanan_atas()\"><h1>KANAN</h1></button></div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col\"></div>\r\n        <div class=\"col\"><button onclick=\"mundur()\"><h1>MUNDUR</h1></button></div>\r\n        <div class=\"col\"></div>\r\n    </div>\r\n    </body>\r\n</html>\r\n~~~\r\n\r\n\r\n## NodeJS Examples\r\n\r\nSource : `simple.js`\r\n~~~javascript\r\n'use strict';\r\n\r\nvar shark = require('shark.io');\r\n\r\nshark.init('127.0.0.1:6969');\r\nvar setup = shark.setup;\r\n\r\nsetup.on('open',function(event){\r\n    event.serial.info(function(data){\r\n        console.log(data);\r\n        process.exit(1);\r\n    });\r\n});\r\n~~~\r\n\r\nSource : `loop.js`\r\n~~~javascript\r\n'use strict';\r\n\r\nvar shark = require('shark.io');\r\n\r\nshark.init('127.0.0.1:6969');\r\nvar loop = shark.loop;\r\n\r\nfunction act(event){\r\n    console.log(\"Running...\");\r\n}\r\n\r\nloop(act,2000);\r\n~~~\r\n\r\nSource : `led_blink.js`\r\n\r\n![](https://raw.githubusercontent.com/ignsdk/doc.iot/master/img/use/blink.png)\r\n~~~javascript\r\n'use strict';\r\n\r\nvar shark = require('shark.io');\r\nvar sleep = require('sleep');\r\n\r\nshark.init('127.0.0.1:6969');\r\nvar loop = shark.loop;\r\nvar gpio;\r\nshark.setup.on('open',function(event){\r\n    gpio = event.gpio;\r\n    gpio.set(18);\r\n    gpio.mode(\"out\");\r\n});\r\n\r\nfunction act(event){\r\n    console.log(\"on\");\r\n    gpio.write(18,1);\r\n    sleep.sleep(3);\r\n    console.log(\"off\");\r\n    gpio.write(18,0);\r\n}\r\n\r\nloop(act,500);\r\n~~~\r\n\r\nSource : `gpio_read.js`\r\n\r\n![](https://raw.githubusercontent.com/ignsdk/doc.iot/master/img/use/sw.jpg)\r\n\r\n~~~javascript\r\n'use strict';\r\n\r\nvar shark = require('shark.io');\r\nvar sleep = require('sleep');\r\n\r\nshark.init('127.0.0.1:6969');\r\nvar loop = shark.loop;\r\nvar gpio;\r\nshark.setup.on('open',function(event){\r\n    gpio = event.gpio;\r\n    gpio.set(18);\r\n    gpio.mode(\"in\");\r\n    gpio.read(18,function(out){\r\n       out.stream.connect(function(data){\r\n          if(data == 1){\r\n             console.log(\"ON\")\r\n          }\r\n       });\r\n    });\r\n});\r\n~~~\r\n\r\n# Contributor\r\n## Documentation\r\n* Brahmanggi Aditya <brahmanggi@gmail.com>\r\n\r\n## Web\r\n* Rizky Ariestiyansyah <ariestiyansyah.rizky@gmail.com>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}